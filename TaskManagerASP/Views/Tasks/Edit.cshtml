
@{
    ViewData["Title"] = "Edit task";
}

<h2>Edit</h2>

@if (!ViewData.ModelState.IsValid)
            {
    <div class="alert alert-danger">@Html.ValidationMessage("EditFailed")</div>
}

@using (Html.BeginForm("Edit", "Tasks", FormMethod.Post))
{
    @model Data.Entities.Entities.Task
        
    @Html.HiddenFor(m => m.Id, new {type = "hidden", required = true})
    @Html.HiddenFor(m => m.CreatedOn, new {type = "hidden", required = true})

    <div class="form-group">
        @Html.LabelFor(m => m.Header)
        @Html.EditorFor(m => m.Header, new {@class = "form-control", placeholder = "Proper header..", required = true})
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new {@class = "form-control", placeholder = "Detailed description.."})
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.RequiredHours)
        @Html.EditorFor(m => m.RequiredHours, new {@class = "form-control", placeholder = "Detailed description.."})
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ExecutitiveId)
        @Html.EditorFor(m => m.ExecutitiveId, new {@class = "form-control", placeholder = "Detailed description.."})
    </div>

    <input type="submit" class="btn btn-primary" value="Edit"/>
}
<a asp-controller="Tasks" asp-action="Index"><button class="btn btn-warning">Cancel</button></a>