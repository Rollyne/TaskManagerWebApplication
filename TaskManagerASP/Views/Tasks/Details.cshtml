
@{
    ViewData["Title"] = "Details";
}

<h2>Task details</h2>
@{ 
    @model TaskManagerASP.Models.TaskIndexViewModel
}
<h4>Header:</h4>
@Html.DisplayFor(m => Model.Header, new { @class = "well" })
<br /><br />
<h4>Description</h4>
@Html.DisplayFor(m => Model.Description, new { @class = "well" })
<br /><br />
<h4>Required hours</h4>
@Html.DisplayFor(m => Model.RequiredHours, new { @class = "well" })
<br /><br />
<h4>Executitive</h4>
@Html.DisplayFor(m => Model.ExecutitiveName, new { @class = "well" })
<br /><br />
<h4>Creator</h4>
@Html.DisplayFor(m => Model.CreatorName, new { @class = "well" })
<br /><br />
<h4>Created on</h4>
@Html.DisplayFor(m => Model.CreatedOn, new { @class = "well" })
<br /><br />
<h4>Last edited</h4>
@Html.DisplayFor(m => Model.LastEditedOn, new { @class = "well" })
<br /><br />
<h4>Status</h4>
@if (Model.IsCompleted)
{
    <div class="well">Completed</div>
}
else
{

    <div class="well">In process</div>
}

<h4>Comments</h4>
<div class="well">
    @await Component.InvokeAsync("Comments", new {parentId = Model.Id})
</div>

<h5>Add new comment</h5>
    <div class="well">
        @using (Html.BeginForm("Create", "Comments", FormMethod.Post))
        {
            @Html.Hidden("TaskId", Model.Id)
            @Html.TextArea("Body", new {@class="form-control"})
            <br/>
            <input type="submit" class="btn btn-primary"/>
        }

    </div>


